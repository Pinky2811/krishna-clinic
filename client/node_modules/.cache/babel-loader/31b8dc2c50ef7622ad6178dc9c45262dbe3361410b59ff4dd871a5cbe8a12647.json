{"ast":null,"code":"var _jsxFileName = \"D:\\\\New Website\\\\krishna-clinic\\\\client\\\\src\\\\context\\\\LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s();\n  const [language, setLanguage] = useState('en');\n  const toggleLanguage = () => setLanguage(prevLang => prevLang === 'en' ? 'gu' : 'en');\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      toggleLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageProvider, \"fVUtOCD1O58HgvMjnE8lxRQa0QA=\");\n_c = LanguageProvider;\nexport const useLanguage = () => {\n  _s2();\n  return useContext(LanguageContext);\n};\n_s2(useLanguage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","LanguageContext","LanguageProvider","children","_s","language","setLanguage","toggleLanguage","prevLang","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLanguage","_s2","$RefreshReg$"],"sources":["D:/New Website/krishna-clinic/client/src/context/LanguageContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState('en');\r\n\r\n  const toggleLanguage = () =>\r\n    setLanguage((prevLang) => (prevLang === 'en' ? 'gu' : 'en'));\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, toggleLanguage }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLanguage = () => useContext(LanguageContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMM,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMS,cAAc,GAAGA,CAAA,KACrBD,WAAW,CAAEE,QAAQ,IAAMA,QAAQ,KAAK,IAAI,GAAG,IAAI,GAAG,IAAK,CAAC;EAE9D,oBACER,OAAA,CAACC,eAAe,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,QAAQ;MAAEE;IAAe,CAAE;IAAAJ,QAAA,EAC3DA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACV,EAAA,CAXWF,gBAAgB;AAAAa,EAAA,GAAhBb,gBAAgB;AAa7B,OAAO,MAAMc,WAAW,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpB,UAAU,CAACI,eAAe,CAAC;AAAA;AAACgB,GAAA,CAAhDD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}